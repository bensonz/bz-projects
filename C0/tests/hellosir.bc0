C0 C0 FF EE       # magic number
00 09             # version 4, arch = 1 (64 bits)

00 00             # int pool count
# int pool

00 2A             # string pool total size
# string pool
79 65 61 68 20 6E 69 67 67 61 0A 00  # "yeah nigga\n"
57 68 61 74 27 73 20 79 6F 75 72 20 6E 61 6D 65 3F 20 00  # "What\'s your name\? "
48 65 6C 6C 6F 2C 20 00  # "Hello, "
21 0A 00  # "!\n"

00 02             # function count
# function_pool

#<main>
00 00             # number of arguments = 0
00 01             # number of local variables = 1
00 25             # code length = 37 bytes
14 00 0C # aldc 12         # s[12] = "What\'s your name\? "
B7 00 00 # invokenative 0  # print("What\'s your name\? ")
57       # pop             # (ignore result)
B8 00 01 # invokestatic 1  # call()
57       # pop             # (ignore result)
B7 00 01 # invokenative 1  # readline()
36 00    # vstore 0        # name = readline();
14 00 1F # aldc 31         # s[31] = "Hello, "
15 00    # vload 0         # name
14 00 27 # aldc 39         # s[39] = "!\n"
B7 00 02 # invokenative 2  # string_join(name, "!\n")
B7 00 02 # invokenative 2  # string_join("Hello, ", string_join(name, "!\n"))
B7 00 00 # invokenative 0  # print(string_join("Hello, ", string_join(name, "!\n")))
57       # pop             # (ignore result)
10 00    # bipush 0        # 0
B0       # return          # 


#<call>
00 00             # number of arguments = 0
00 00             # number of local variables = 0
00 0A             # code length = 10 bytes
14 00 00 # aldc 0          # s[0] = "yeah nigga\n"
B7 00 00 # invokenative 0  # print("yeah nigga\n")
57       # pop             # (ignore result)
10 00    # bipush 0        # dummy return value
B0       # return          # 

00 03             # native count
# native pool
00 01 00 06       # print
00 00 00 0B       # readline
00 02 00 4F       # string_join

